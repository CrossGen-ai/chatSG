
> backend@1.0.0 dev
> nodemon server.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): server.js src/**/* utils/**/*[39m
[33m[nodemon] watching extensions: js,json[39m
[32m[nodemon] starting `node server.js`[39m
=== ENVIRONMENT DEBUG ===
Current working directory: /Users/crossgenai/sg/chatSG/backend
__dirname: /Users/crossgenai/sg/chatSG/backend
process.env.CHATSG_ENVIRONMENT: dev
process.env.BACKEND: Orch
========================
[Auth] Using mock authentication provider
[Server] Performance monitoring loaded
[Server] Connection diagnostics loaded
[Server] Loaded slash commands router and processor
[Server] Loaded new storage system
[Server] Loaded memory visualization handlers
[StorageManager] Initializing with PostgreSQL backend
[PostgresSessionIndex] Initialized with PostgreSQL backend
[MemoryPersistence] Initialized with cleanup interval: 300000ms
[StateManager] Initialized with config: {
  defaultTTL: 86400000,
  maxSessions: 1000,
  maxSharedStates: 10000,
  enablePersistence: true,
  enableEvents: true
}
[AgentOrchestrator] Initialized 3 orchestration strategies
[AgentOrchestrator] Initialized with config: {
  maxRetries: 2,
  timeoutMs: 15000,
  fallbackStrategy: 'sequential',
  enableStateSharing: true
}
[OrchestrationMiddleware] Initialized with config: {
  enableOrchestration: true,
  preserveBackendRouting: true,
  orchestrationMode: 'enhanced',
  enableLogging: true,
  enableMetrics: true
}
[LLMHelper] Initialized with provider: openai
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: false
[IndividualAgentFactory] Created AnalyticalAgent successfully
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: false
[IndividualAgentFactory] Created CreativeAgent successfully
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: false
[IndividualAgentFactory] Created TechnicalAgent successfully
[IndividualAgentFactory] Created CRMAgent successfully
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: false
[IndividualAgentFactory] Created FinancialAgent successfully
[IndividualAgentFactory] Successfully created 5 individual agents
[AgentOrchestrator] Registered agent: AnalyticalAgent (analytical)
[Orchestrator] Registered AnalyticalAgent (analytical) - Specialized agent for data analysis, statistical computations, and research tasks
[AgentOrchestrator] Registered agent: CreativeAgent (creative)
[Orchestrator] Registered CreativeAgent (creative) - Specialized agent for creative writing, brainstorming, and ideation tasks
[AgentOrchestrator] Registered agent: TechnicalAgent (technical)
[Orchestrator] Registered TechnicalAgent (technical) - Specialized agent for technical programming, debugging, and code-related tasks
[AgentOrchestrator] Registered agent: CRMAgent (crm)
[Orchestrator] Registered CRMAgent (crm) - Specialized agent for CRM operations, customer queries, and pipeline management
[AgentOrchestrator] Registered agent: FinancialAgent (financial)
[Orchestrator] Registered FinancialAgent (financial) - Specialized agent for financial analysis, investment research, and economic insights
[Orchestrator] Successfully registered 5 specialized LLM agents
[BackendIntegrationManager] Initializing backend integration...
[BackendIntegrationManager] Initialized with 0 backends
[Orchestrator] Setup created successfully
=== BACKEND CONFIGURATION ===
BACKEND mode: Orch
Legacy ENVIRONMENT: dev
Active backend: Enhanced Orchestrator (Multi-Agent)
Orchestrator initialized: true
=============================
[Mem0Service] Using Qdrant vector store
[Mem0Service] Graph store enabled with Neo4j
[Mem0Service] Initialized successfully
[Orchestrator] Initialized with 5 specialized agents
[StorageManager] Mem0 service initialized
[StorageManager] Initialized
[Server] Storage manager initialized
=== ChatSG Server Configuration ===
- Server running at http://localhost:3000/
- Backend Mode: Orch
- Active Backend: Enhanced Orchestrator (Multi-Agent)
- Legacy Environment: dev
- Orchestrator: Ready
- Registered Agents: 5
- Available Strategies: simple,capability-based,keyword-based
- Environment: development
- Backend Integration: Active
- Registered Backends: 
- VNet IP: 192.168.15.229
===================================
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Token created: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  ip: '::1',
  connectionRemoteAddress: '::1',
  socketRemoteAddress: '::1',
  headers: { 'x-forwarded-for': undefined, 'x-real-ip': undefined }
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Initialized with config path: /Users/crossgenai/sg/chatSG/backend/dist/config/slash-commands.json
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3598s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3584s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3581s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3580s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3574s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/neo4j/1
[Server] Security middleware passed for GET /api/memory/neo4j/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3564s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/1
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'c8578fc7ab27f8a008a1...',
  expiresIn: '3556s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Token created: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  ip: '::1',
  connectionRemoteAddress: '::1',
  socketRemoteAddress: '::1',
  headers: { 'x-forwarded-for': undefined, 'x-real-ip': undefined }
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Database Pool] New client connected
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/slash-commands
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3599s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3597s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3597s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3597s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3597s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3596s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3521s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3521s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3521s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3521s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Database Pool] New client connected
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3518s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3517s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3517s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3517s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3517s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3516s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3515s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3457s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3457s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3457s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3457s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3454s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3450s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3439s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3437s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3434s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3433s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3431s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3430s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3429s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3429s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/neo4j/1
[Server] Security middleware passed for GET /api/memory/neo4j/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3427s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/1
[Server] Applying security middleware for GET /api/memory/postgres/1
[Server] Security middleware passed for GET /api/memory/postgres/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3425s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/1
[Memory API] PostgreSQL visualization request: {
  userId: '1',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/qdrant/1
[Server] Security middleware passed for GET /api/memory/qdrant/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3421s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/1
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3386s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3375s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/postgres/1
[Server] Security middleware passed for GET /api/memory/postgres/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/1
[Memory API] PostgreSQL visualization request: {
  userId: '1',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3371s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3370s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/postgres/1
[Server] Security middleware passed for GET /api/memory/postgres/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3368s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/1
[Memory API] PostgreSQL visualization request: {
  userId: '1',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/neo4j/1
[Server] Security middleware passed for GET /api/memory/neo4j/1
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3365s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/1
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/1
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3357s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3354s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3352s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3350s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3348s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Database Pool] New client connected
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3337s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3333s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3333s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3333s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3333s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3328s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 16 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3325s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3324s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3324s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3324s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3324s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3321s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3319s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3319s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3319s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3319s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/slash-commands
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3294s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3286s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3286s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[applyMiddleware] Checking body for POST - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for POST - req.body: {
  message: 'i live in california',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for POST /api/chat/stream
[applyMiddleware] Checking body for POST - req.body: {
  message: 'i live in california',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3286s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for POST /api/chat/stream
[Server] About to apply CSRF header middleware...
[applyMiddleware] Checking body for POST - req.body: {
  message: 'i live in california',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[CSRF-Header] Bypassing CSRF validation in development mode
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for POST /api/chat/stream
[Server] SSE streaming endpoint hit
[Server] Processing SSE request
[Server] req.body: {
  message: 'i live in california',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[Server] Performance monitoring enabled for SSE request
[Server] Streaming request for session: 760fc7c7329d8c487f7f1911ee461b8d, message: "i live in california"
[Server] Sending SSE event: connected { sessionId: '760fc7c7329d8c487f7f1911ee461b8d' }
[ORCHESTRATOR] Processing with streaming: "i live in california"
[AgentOrchestrator] Selecting agent for session: 760fc7c7329d8c487f7f1911ee461b8d
[AgentOrchestrator] User preferences: {}
[MemoryPersistence] Stored key: session:760fc7c7329d8c487f7f1911ee461b8d, TTL: none
[AgentOrchestrator] Updated agent history for session 760fc7c7329d8c487f7f1911ee461b8d: AnalyticalAgent
[MemoryPersistence] Stored key: session:760fc7c7329d8c487f7f1911ee461b8d, TTL: none
[AgentOrchestrator] Updated user preferences for session 760fc7c7329d8c487f7f1911ee461b8d: { lastAgentUsed: 'AnalyticalAgent' }
[AgentOrchestrator] Selected agent: AnalyticalAgent (confidence: 0.1)
[ORCHESTRATOR] Selected AnalyticalAgent for streaming
[Server] Sending SSE event: start {
  agent: 'AnalyticalAgent',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[AnalyticalAgent] Initializing analytical agent...
[AnalyticalAgent] Analytical agent initialized successfully
[AnalyticalAgent] Processing analytical request: "i live in california..."
[AnalyticalAgent] Detected task type: general
[AnalyticalAgent] Using Mem0 for context retrieval
[AnalyticalAgent] Starting Mem0 context retrieval...
[Server] Starting deferred session operations for: 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Session check took: 6.95ms
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 42
[DEBUG] Entity type map: {"california":"location"}
[DEBUG] Entity type map: {"california":"location"}
[Mem0Service] Search for "i live in california" returned 1 results
[Mem0Service] Built context with 1 relevant memories
[AnalyticalAgent] Context retrieval completed in 5248ms
[AnalyticalAgent] Memory status set: {
  enabled: true,
  memoryCount: 1,
  status: 'loaded',
  retrievalTime: 5248
}
[AnalyticalAgent] Mem0 returned 3 context messages
[AnalyticalAgent] Calling LLM with 3 messages (including conversation history)
[AnalyticalAgent] streamCallback type: function, value: (token) => {
                    if (timers.llm && !firstTokenReceived && typeof token === 'string') {
                        timers.llm.markFirstTokenReceived();
                        firstTokenReceived = true;
                    }
                    if (typeof token === 'string') {
                        tokenCount++;
                    }
                    streamCallback(token);
                }
[AnalyticalAgent] Streaming mode enabled
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: true
[AnalyticalAgent] Token received: ""
[PERF:LLM] Slow TTFT for unknown: 5780.34ms
[Server] Sending SSE event: token { content: '' }
[AnalyticalAgent] Token received: "Thank"
[Server] Sending SSE event: token { content: 'Thank' }
[AnalyticalAgent] Token received: " you"
[Server] Sending SSE event: token { content: ' you' }
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3280s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3280s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[AnalyticalAgent] Token received: " for"
[Server] Sending SSE event: token { content: ' for' }
[AnalyticalAgent] Token received: " providing"
[Server] Sending SSE event: token { content: ' providing' }
[AnalyticalAgent] Token received: " your"
[Server] Sending SSE event: token { content: ' your' }
[AnalyticalAgent] Token received: " location"
[Server] Sending SSE event: token { content: ' location' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " Sean"
[Server] Sending SSE event: token { content: ' Sean' }
[AnalyticalAgent] Token received: "."
[Server] Sending SSE event: token { content: '.' }
[AnalyticalAgent] Token received: " If"
[Server] Sending SSE event: token { content: ' If' }
[AnalyticalAgent] Token received: " you"
[Server] Sending SSE event: token { content: ' you' }
[AnalyticalAgent] Token received: " need"
[Server] Sending SSE event: token { content: ' need' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: " or"
[Server] Sending SSE event: token { content: ' or' }
[AnalyticalAgent] Token received: " insights"
[Server] Sending SSE event: token { content: ' insights' }
[AnalyticalAgent] Token received: " specific"
[Server] Sending SSE event: token { content: ' specific' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " California"
[Server] Sending SSE event: token { content: ' California' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " such"
[Server] Sending SSE event: token { content: ' such' }
[AnalyticalAgent] Token received: " as"
[Server] Sending SSE event: token { content: ' as' }
[AnalyticalAgent] Token received: " economic"
[Server] Sending SSE event: token { content: ' economic' }
[AnalyticalAgent] Token received: " trends"
[Server] Sending SSE event: token { content: ' trends' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " demographic"
[Server] Sending SSE event: token { content: ' demographic' }
[AnalyticalAgent] Token received: " data"
[Server] Sending SSE event: token { content: ' data' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " or"
[Server] Sending SSE event: token { content: ' or' }
[AnalyticalAgent] Token received: " policy"
[Server] Sending SSE event: token { content: ' policy' }
[AnalyticalAgent] Token received: " impacts"
[Server] Sending SSE event: token { content: ' impacts' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " please"
[Server] Sending SSE event: token { content: ' please' }
[AnalyticalAgent] Token received: " let"
[Server] Sending SSE event: token { content: ' let' }
[AnalyticalAgent] Token received: " me"
[Server] Sending SSE event: token { content: ' me' }
[AnalyticalAgent] Token received: " know"
[Server] Sending SSE event: token { content: ' know' }
[AnalyticalAgent] Token received: "."
[Server] Sending SSE event: token { content: '.' }
[AnalyticalAgent] Token received: " Additionally"
[Server] Sending SSE event: token { content: ' Additionally' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " if"
[Server] Sending SSE event: token { content: ' if' }
[AnalyticalAgent] Token received: " there"
[Server] Sending SSE event: token { content: ' there' }
[AnalyticalAgent] Token received: " is"
[Server] Sending SSE event: token { content: ' is' }
[AnalyticalAgent] Token received: " a"
[Server] Sending SSE event: token { content: ' a' }
[AnalyticalAgent] Token received: " specific"
[Server] Sending SSE event: token { content: ' specific' }
[AnalyticalAgent] Token received: " topic"
[Server] Sending SSE event: token { content: ' topic' }
[AnalyticalAgent] Token received: " or"
[Server] Sending SSE event: token { content: ' or' }
[AnalyticalAgent] Token received: " question"
[Server] Sending SSE event: token { content: ' question' }
[AnalyticalAgent] Token received: " you"
[Server] Sending SSE event: token { content: ' you' }
[AnalyticalAgent] Token received: " want"
[Server] Sending SSE event: token { content: ' want' }
[AnalyticalAgent] Token received: " me"
[Server] Sending SSE event: token { content: ' me' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " focus"
[Server] Sending SSE event: token { content: ' focus' }
[AnalyticalAgent] Token received: " on"
[Server] Sending SSE event: token { content: ' on' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " providing"
[Server] Sending SSE event: token { content: ' providing' }
[AnalyticalAgent] Token received: " that"
[Server] Sending SSE event: token { content: ' that' }
[AnalyticalAgent] Token received: " information"
[Server] Sending SSE event: token { content: ' information' }
[AnalyticalAgent] Token received: " would"
[Server] Sending SSE event: token { content: ' would' }
[AnalyticalAgent] Token received: " help"
[Server] Sending SSE event: token { content: ' help' }
[AnalyticalAgent] Token received: " me"
[Server] Sending SSE event: token { content: ' me' }
[AnalyticalAgent] Token received: " deliver"
[Server] Sending SSE event: token { content: ' deliver' }
[AnalyticalAgent] Token received: " a"
[Server] Sending SSE event: token { content: ' a' }
[AnalyticalAgent] Token received: " more"
[Server] Sending SSE event: token { content: ' more' }
[AnalyticalAgent] Token received: " tailored"
[Server] Sending SSE event: token { content: ' tailored' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: "."
[Server] Sending SSE event: token { content: '.' }
[AnalyticalAgent] Token received: ""
[Server] Sending SSE event: token { content: '' }
[AnalyticalAgent] Streaming completed (338 chars)
[AnalyticalAgent] Final response length: 338 chars
[PERF:Agent] AnalyticalAgent execution: 7481.00ms
[PERF:LLM] unknown - Total: 7481ms, TTFT: 5780ms, Stream: 1701ms, TPS: 39.4
[DEBUG] Memory status type: object
[DEBUG] Memory status: {
  "enabled": true,
  "memoryCount": 1,
  "status": "loaded",
  "retrievalTime": 5248
}
[Server] Performance data collected: {
  database: { totalTime: 6.95, operations: { 'check-session': [Object] } },
  agent: { totalTime: 7481.86, selection: 0.77, execution: 7481 },
  llm: { totalTime: 7481.07, ttft: 5780.34, tokens: 67 }
}
[Server] Sending SSE event: done {
  agent: 'AnalyticalAgent',
  agentType: 'analytical',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  memoryStatus: {
    enabled: true,
    memoryCount: 1,
    status: 'loaded',
    retrievalTime: 5248
  },
  orchestration: {
    confidence: 1,
    streaming: true,
    forcedBySlashCommand: false,
    commandUsed: undefined
  },
  performance: {
    database: { totalTime: 6.95, operations: [Object] },
    agent: { totalTime: 7481.86, selection: 0.77, execution: 7481 },
    llm: { totalTime: 7481.07, ttft: 5780.34, tokens: 67 }
  }
}
[Server] Recorded 1 database operations, total: 6.92ms
[DEBUG] Extracted entities: [{"source":"2","relationship":"lives_in","destination":"california"}]
[applyMiddleware] Checking body for PATCH - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 43
[Server] Security middleware passed for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] PATCH /api/chats/:id/read endpoint hit
[Server] req.body: {}
[Server] Marking session as read: 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionIndex] Marked session 760fc7c7329d8c487f7f1911ee461b8d as read
[Server] Session marked as read successfully
[DEBUG] Deleted relationships: []
[AnalyticalAgent] Mem0 context retrieval timed out after 10000ms (10s limit), using minimal context
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved user message to session 760fc7c7329d8c487f7f1911ee461b8d
[PERF:DB] Slow query 'save-user-message': 10258.37ms
[Server] Message save took: 10258.40ms
[Server] Total session operations took: 10265.38ms
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3275s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3275s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3275s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[DEBUG] Entity type map: {"sean":"person","california":"location","economic_trends":"topic","demographic_data":"topic","policy_impacts":"topic"}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3275s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3274s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[DEBUG] Extracted entities: [{"source":"sean","relationship":"located_in","destination":"california"},{"source":"california","relationship":"has","destination":"economic_trends"},{"source":"california","relationship":"has","destination":"demographic_data"},{"source":"california","relationship":"has","destination":"policy_impacts"}]
[DEBUG] Deleted relationships: [{"source":"2","relationship":"lives_in","destination":"california"},{"source":"financial_questions","relationship":"is_about","destination":"economic_insights"}]
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3260s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Database Pool] New client connected
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionIndex] Updated session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved assistant message to session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3248s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[applyMiddleware] Checking body for POST - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for POST - req.body: {
  message: 'What can you do?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for POST /api/chat/stream
[applyMiddleware] Checking body for POST - req.body: {
  message: 'What can you do?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3245s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for POST /api/chat/stream
[Server] About to apply CSRF header middleware...
[applyMiddleware] Checking body for POST - req.body: {
  message: 'What can you do?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[applyMiddleware] Body already parsed, skipping parseBody
[CSRF-Header] Bypassing CSRF validation in development mode
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for POST /api/chat/stream
[Server] SSE streaming endpoint hit
[Server] Processing SSE request
[Server] req.body: {
  message: 'What can you do?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[Server] Performance monitoring enabled for SSE request
[Server] Streaming request for session: 760fc7c7329d8c487f7f1911ee461b8d, message: "What can you do?"
[Server] Sending SSE event: connected { sessionId: '760fc7c7329d8c487f7f1911ee461b8d' }
[ORCHESTRATOR] Processing with streaming: "What can you do?"
[AgentOrchestrator] Selecting agent for session: 760fc7c7329d8c487f7f1911ee461b8d
[AgentOrchestrator] User preferences: {}
[MemoryPersistence] Stored key: session:760fc7c7329d8c487f7f1911ee461b8d, TTL: none
[AgentOrchestrator] Updated agent history for session 760fc7c7329d8c487f7f1911ee461b8d: AnalyticalAgent
[MemoryPersistence] Stored key: session:760fc7c7329d8c487f7f1911ee461b8d, TTL: none
[AgentOrchestrator] Updated user preferences for session 760fc7c7329d8c487f7f1911ee461b8d: { lastAgentUsed: 'AnalyticalAgent' }
[AgentOrchestrator] Selected agent: AnalyticalAgent (confidence: 0.1)
[ORCHESTRATOR] Selected AnalyticalAgent for streaming
[Server] Sending SSE event: start {
  agent: 'AnalyticalAgent',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d'
}
[AnalyticalAgent] Processing analytical request: "What can you do?..."
[AnalyticalAgent] Detected task type: general
[AnalyticalAgent] Using Mem0 for context retrieval
[AnalyticalAgent] Starting Mem0 context retrieval...
[Server] Starting deferred session operations for: 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3245s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Session check took: 5.86ms
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 44
[DEBUG] Entity type map: {"i":"pronoun"}
[Mem0Service] Search for "What can you do?" returned 2 results
[Mem0Service] Built context with 2 relevant memories
[AnalyticalAgent] Context retrieval completed in 2062ms
[AnalyticalAgent] Memory status set: {
  enabled: true,
  memoryCount: 2,
  status: 'loaded',
  retrievalTime: 2062
}
[AnalyticalAgent] Mem0 returned 4 context messages
[AnalyticalAgent] Calling LLM with 4 messages (including conversation history)
[AnalyticalAgent] streamCallback type: function, value: (token) => {
                    if (timers.llm && !firstTokenReceived && typeof token === 'string') {
                        timers.llm.markFirstTokenReceived();
                        firstTokenReceived = true;
                    }
                    if (typeof token === 'string') {
                        tokenCount++;
                    }
                    streamCallback(token);
                }
[AnalyticalAgent] Streaming mode enabled
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: true
[DEBUG] Entity type map: {}
[DEBUG] Extracted entities: []
[AnalyticalAgent] Token received: ""
[PERF:LLM] Slow TTFT for unknown: 3046.44ms
[Server] Sending SSE event: token { content: '' }
[AnalyticalAgent] Token received: "I"
[Server] Sending SSE event: token { content: 'I' }
[AnalyticalAgent] Token received: " can"
[Server] Sending SSE event: token { content: ' can' }
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3242s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3242s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[AnalyticalAgent] Token received: " assist"
[Server] Sending SSE event: token { content: ' assist' }
[AnalyticalAgent] Token received: " you"
[Server] Sending SSE event: token { content: ' you' }
[AnalyticalAgent] Token received: " with"
[Server] Sending SSE event: token { content: ' with' }
[AnalyticalAgent] Token received: " a"
[Server] Sending SSE event: token { content: ' a' }
[AnalyticalAgent] Token received: " wide"
[Server] Sending SSE event: token { content: ' wide' }
[AnalyticalAgent] Token received: " range"
[Server] Sending SSE event: token { content: ' range' }
[AnalyticalAgent] Token received: " of"
[Server] Sending SSE event: token { content: ' of' }
[AnalyticalAgent] Token received: " analytical"
[Server] Sending SSE event: token { content: ' analytical' }
[AnalyticalAgent] Token received: " tasks"
[Server] Sending SSE event: token { content: ' tasks' }
[AnalyticalAgent] Token received: " by"
[Server] Sending SSE event: token { content: ' by' }
[AnalyticalAgent] Token received: " breaking"
[Server] Sending SSE event: token { content: ' breaking' }
[AnalyticalAgent] Token received: " down"
[Server] Sending SSE event: token { content: ' down' }
[AnalyticalAgent] Token received: " complex"
[Server] Sending SSE event: token { content: ' complex' }
[AnalyticalAgent] Token received: " problems"
[Server] Sending SSE event: token { content: ' problems' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " applying"
[Server] Sending SSE event: token { content: ' applying' }
[AnalyticalAgent] Token received: " logical"
[Server] Sending SSE event: token { content: ' logical' }
[AnalyticalAgent] Token received: " reasoning"
[Server] Sending SSE event: token { content: ' reasoning' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " providing"
[Server] Sending SSE event: token { content: ' providing' }
[AnalyticalAgent] Token received: " evidence"
[Server] Sending SSE event: token { content: ' evidence' }
[AnalyticalAgent] Token received: "-based"
[Server] Sending SSE event: token { content: '-based' }
[AnalyticalAgent] Token received: " insights"
[Server] Sending SSE event: token { content: ' insights' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " recommendations"
[Server] Sending SSE event: token { content: ' recommendations' }
[AnalyticalAgent] Token received: "."
[Server] Sending SSE event: token { content: '.' }
[AnalyticalAgent] Token received: " Here's"
[Server] Sending SSE event: token { content: " Here's" }
[AnalyticalAgent] Token received: " how"
[Server] Sending SSE event: token { content: ' how' }
[AnalyticalAgent] Token received: " I"
[Server] Sending SSE event: token { content: ' I' }
[AnalyticalAgent] Token received: " can"
[Server] Sending SSE event: token { content: ' can' }
[AnalyticalAgent] Token received: " help"
[Server] Sending SSE event: token { content: ' help' }
[AnalyticalAgent] Token received: ":

"
[Server] Sending SSE event: token { content: ':\n\n' }
[AnalyticalAgent] Token received: "###"
[Server] Sending SSE event: token { content: '###' }
[AnalyticalAgent] Token received: " Data"
[Server] Sending SSE event: token { content: ' Data' }
[AnalyticalAgent] Token received: " Analysis"
[Server] Sending SSE event: token { content: ' Analysis' }
[AnalyticalAgent] Token received: "
"
[Server] Sending SSE event: token { content: '\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Data"
[Server] Sending SSE event: token { content: 'Data' }
[AnalyticalAgent] Token received: " Cleaning"
[Server] Sending SSE event: token { content: ' Cleaning' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " Preparation"
[Server] Sending SSE event: token { content: ' Preparation' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Organ"
[Server] Sending SSE event: token { content: ' Organ' }
[AnalyticalAgent] Token received: "ize"
[Server] Sending SSE event: token { content: 'ize' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " prepare"
[Server] Sending SSE event: token { content: ' prepare' }
[AnalyticalAgent] Token received: " datasets"
[Server] Sending SSE event: token { content: ' datasets' }
[AnalyticalAgent] Token received: " for"
[Server] Sending SSE event: token { content: ' for' }
[DEBUG] Deleted relationships: []
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved user message to session 760fc7c7329d8c487f7f1911ee461b8d
[PERF:DB] Slow query 'save-user-message': 4318.28ms
[Server] Message save took: 4318.30ms
[Server] Total session operations took: 4324.19ms
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Des"
[Server] Sending SSE event: token { content: 'Des' }
[AnalyticalAgent] Token received: "criptive"
[Server] Sending SSE event: token { content: 'criptive' }
[AnalyticalAgent] Token received: " Statistics"
[Server] Sending SSE event: token { content: ' Statistics' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Summ"
[Server] Sending SSE event: token { content: ' Summ' }
[AnalyticalAgent] Token received: "ar"
[Server] Sending SSE event: token { content: 'ar' }
[AnalyticalAgent] Token received: "ize"
[Server] Sending SSE event: token { content: 'ize' }
[AnalyticalAgent] Token received: " data"
[Server] Sending SSE event: token { content: ' data' }
[AnalyticalAgent] Token received: " using"
[Server] Sending SSE event: token { content: ' using' }
[AnalyticalAgent] Token received: " measures"
[Server] Sending SSE event: token { content: ' measures' }
[AnalyticalAgent] Token received: " like"
[Server] Sending SSE event: token { content: ' like' }
[AnalyticalAgent] Token received: " mean"
[Server] Sending SSE event: token { content: ' mean' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " median"
[Server] Sending SSE event: token { content: ' median' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " mode"
[Server] Sending SSE event: token { content: ' mode' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " standard"
[Server] Sending SSE event: token { content: ' standard' }
[AnalyticalAgent] Token received: " deviation"
[Server] Sending SSE event: token { content: ' deviation' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Infer"
[Server] Sending SSE event: token { content: 'Infer' }
[AnalyticalAgent] Token received: "ential"
[Server] Sending SSE event: token { content: 'ential' }
[AnalyticalAgent] Token received: " Statistics"
[Server] Sending SSE event: token { content: ' Statistics' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Conduct"
[Server] Sending SSE event: token { content: ' Conduct' }
[AnalyticalAgent] Token received: " hypothesis"
[Server] Sending SSE event: token { content: ' hypothesis' }
[AnalyticalAgent] Token received: " testing"
[Server] Sending SSE event: token { content: ' testing' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " regression"
[Server] Sending SSE event: token { content: ' regression' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " other"
[Server] Sending SSE event: token { content: ' other' }
[AnalyticalAgent] Token received: " statistical"
[Server] Sending SSE event: token { content: ' statistical' }
[AnalyticalAgent] Token received: " tests"
[Server] Sending SSE event: token { content: ' tests' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " draw"
[Server] Sending SSE event: token { content: ' draw' }
[AnalyticalAgent] Token received: " conclusions"
[Server] Sending SSE event: token { content: ' conclusions' }
[AnalyticalAgent] Token received: " from"
[Server] Sending SSE event: token { content: ' from' }
[AnalyticalAgent] Token received: " data"
[Server] Sending SSE event: token { content: ' data' }
[AnalyticalAgent] Token received: ".

"
[Server] Sending SSE event: token { content: '.\n\n' }
[AnalyticalAgent] Token received: "###"
[Server] Sending SSE event: token { content: '###' }
[AnalyticalAgent] Token received: " Research"
[Server] Sending SSE event: token { content: ' Research' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " Insights"
[Server] Sending SSE event: token { content: ' Insights' }
[AnalyticalAgent] Token received: "
"
[Server] Sending SSE event: token { content: '\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Liter"
[Server] Sending SSE event: token { content: 'Liter' }
[AnalyticalAgent] Token received: "ature"
[Server] Sending SSE event: token { content: 'ature' }
[AnalyticalAgent] Token received: " Review"
[Server] Sending SSE event: token { content: ' Review' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Summ"
[Server] Sending SSE event: token { content: ' Summ' }
[AnalyticalAgent] Token received: "ar"
[Server] Sending SSE event: token { content: 'ar' }
[AnalyticalAgent] Token received: "ize"
[Server] Sending SSE event: token { content: 'ize' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " synth"
[Server] Sending SSE event: token { content: ' synth' }
[AnalyticalAgent] Token received: "esize"
[Server] Sending SSE event: token { content: 'esize' }
[AnalyticalAgent] Token received: " existing"
[Server] Sending SSE event: token { content: ' existing' }
[AnalyticalAgent] Token received: " research"
[Server] Sending SSE event: token { content: ' research' }
[AnalyticalAgent] Token received: " on"
[Server] Sending SSE event: token { content: ' on' }
[AnalyticalAgent] Token received: " a"
[Server] Sending SSE event: token { content: ' a' }
[AnalyticalAgent] Token received: " given"
[Server] Sending SSE event: token { content: ' given' }
[AnalyticalAgent] Token received: " topic"
[Server] Sending SSE event: token { content: ' topic' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Market"
[Server] Sending SSE event: token { content: 'Market' }
[AnalyticalAgent] Token received: " Analysis"
[Server] Sending SSE event: token { content: ' Analysis' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Provide"
[Server] Sending SSE event: token { content: ' Provide' }
[AnalyticalAgent] Token received: " insights"
[Server] Sending SSE event: token { content: ' insights' }
[AnalyticalAgent] Token received: " into"
[Server] Sending SSE event: token { content: ' into' }
[AnalyticalAgent] Token received: " market"
[Server] Sending SSE event: token { content: ' market' }
[AnalyticalAgent] Token received: " trends"
[Server] Sending SSE event: token { content: ' trends' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " consumer"
[Server] Sending SSE event: token { content: ' consumer' }
[AnalyticalAgent] Token received: " behavior"
[Server] Sending SSE event: token { content: ' behavior' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " competitive"
[Server] Sending SSE event: token { content: ' competitive' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Policy"
[Server] Sending SSE event: token { content: 'Policy' }
[AnalyticalAgent] Token received: " Analysis"
[Server] Sending SSE event: token { content: ' Analysis' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Evaluate"
[Server] Sending SSE event: token { content: ' Evaluate' }
[AnalyticalAgent] Token received: " the"
[Server] Sending SSE event: token { content: ' the' }
[AnalyticalAgent] Token received: " impact"
[Server] Sending SSE event: token { content: ' impact' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " effectiveness"
[Server] Sending SSE event: token { content: ' effectiveness' }
[AnalyticalAgent] Token received: " of"
[Server] Sending SSE event: token { content: ' of' }
[AnalyticalAgent] Token received: " policies"
[Server] Sending SSE event: token { content: ' policies' }
[AnalyticalAgent] Token received: " or"
[Server] Sending SSE event: token { content: ' or' }
[AnalyticalAgent] Token received: " programs"
[Server] Sending SSE event: token { content: ' programs' }
[AnalyticalAgent] Token received: ".

"
[Server] Sending SSE event: token { content: '.\n\n' }
[AnalyticalAgent] Token received: "###"
[Server] Sending SSE event: token { content: '###' }
[AnalyticalAgent] Token received: " Problem"
[Server] Sending SSE event: token { content: ' Problem' }
[AnalyticalAgent] Token received: " Sol"
[Server] Sending SSE event: token { content: ' Sol' }
[AnalyticalAgent] Token received: "ving"
[Server] Sending SSE event: token { content: 'ving' }
[AnalyticalAgent] Token received: "
"
[Server] Sending SSE event: token { content: '\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Decision"
[Server] Sending SSE event: token { content: 'Decision' }
[AnalyticalAgent] Token received: " Analysis"
[Server] Sending SSE event: token { content: ' Analysis' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Use"
[Server] Sending SSE event: token { content: ' Use' }
[AnalyticalAgent] Token received: " decision"
[Server] Sending SSE event: token { content: ' decision' }
[AnalyticalAgent] Token received: " trees"
[Server] Sending SSE event: token { content: ' trees' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " cost"
[Server] Sending SSE event: token { content: ' cost' }
[AnalyticalAgent] Token received: "-benef"
[Server] Sending SSE event: token { content: '-benef' }
[AnalyticalAgent] Token received: "it"
[Server] Sending SSE event: token { content: 'it' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " other"
[Server] Sending SSE event: token { content: ' other' }
[AnalyticalAgent] Token received: " tools"
[Server] Sending SSE event: token { content: ' tools' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " make"
[Server] Sending SSE event: token { content: ' make' }
[AnalyticalAgent] Token received: " informed"
[Server] Sending SSE event: token { content: ' informed' }
[AnalyticalAgent] Token received: " decisions"
[Server] Sending SSE event: token { content: ' decisions' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Risk"
[Server] Sending SSE event: token { content: 'Risk' }
[AnalyticalAgent] Token received: " Assessment"
[Server] Sending SSE event: token { content: ' Assessment' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Identify"
[Server] Sending SSE event: token { content: ' Identify' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " evaluate"
[Server] Sending SSE event: token { content: ' evaluate' }
[AnalyticalAgent] Token received: " potential"
[Server] Sending SSE event: token { content: ' potential' }
[AnalyticalAgent] Token received: " risks"
[Server] Sending SSE event: token { content: ' risks' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " their"
[Server] Sending SSE event: token { content: ' their' }
[AnalyticalAgent] Token received: " impacts"
[Server] Sending SSE event: token { content: ' impacts' }
[AnalyticalAgent] Token received: ".

"
[Server] Sending SSE event: token { content: '.\n\n' }
[AnalyticalAgent] Token received: "###"
[Server] Sending SSE event: token { content: '###' }
[AnalyticalAgent] Token received: " Visualization"
[Server] Sending SSE event: token { content: ' Visualization' }
[AnalyticalAgent] Token received: "
"
[Server] Sending SSE event: token { content: '\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Data"
[Server] Sending SSE event: token { content: 'Data' }
[AnalyticalAgent] Token received: " Visualization"
[Server] Sending SSE event: token { content: ' Visualization' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Create"
[Server] Sending SSE event: token { content: ' Create' }
[AnalyticalAgent] Token received: " charts"
[Server] Sending SSE event: token { content: ' charts' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " graphs"
[Server] Sending SSE event: token { content: ' graphs' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " dashboards"
[Server] Sending SSE event: token { content: ' dashboards' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " effectively"
[Server] Sending SSE event: token { content: ' effectively' }
[AnalyticalAgent] Token received: " communicate"
[Server] Sending SSE event: token { content: ' communicate' }
[AnalyticalAgent] Token received: " data"
[Server] Sending SSE event: token { content: ' data' }
[AnalyticalAgent] Token received: " insights"
[Server] Sending SSE event: token { content: ' insights' }
[AnalyticalAgent] Token received: ".

"
[Server] Sending SSE event: token { content: '.\n\n' }
[AnalyticalAgent] Token received: "###"
[Server] Sending SSE event: token { content: '###' }
[AnalyticalAgent] Token received: " Recommendations"
[Server] Sending SSE event: token { content: ' Recommendations' }
[AnalyticalAgent] Token received: "
"
[Server] Sending SSE event: token { content: '\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Strateg"
[Server] Sending SSE event: token { content: 'Strateg' }
[AnalyticalAgent] Token received: "ic"
[Server] Sending SSE event: token { content: 'ic' }
[AnalyticalAgent] Token received: " Planning"
[Server] Sending SSE event: token { content: ' Planning' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Provide"
[Server] Sending SSE event: token { content: ' Provide' }
[AnalyticalAgent] Token received: " actionable"
[Server] Sending SSE event: token { content: ' actionable' }
[AnalyticalAgent] Token received: " recommendations"
[Server] Sending SSE event: token { content: ' recommendations' }
[AnalyticalAgent] Token received: " based"
[Server] Sending SSE event: token { content: ' based' }
[AnalyticalAgent] Token received: " on"
[Server] Sending SSE event: token { content: ' on' }
[AnalyticalAgent] Token received: " analysis"
[Server] Sending SSE event: token { content: ' analysis' }
[AnalyticalAgent] Token received: ".
"
[Server] Sending SSE event: token { content: '.\n' }
[AnalyticalAgent] Token received: "-"
[Server] Sending SSE event: token { content: '-' }
[AnalyticalAgent] Token received: " **"
[Server] Sending SSE event: token { content: ' **' }
[AnalyticalAgent] Token received: "Performance"
[Server] Sending SSE event: token { content: 'Performance' }
[AnalyticalAgent] Token received: " Improvement"
[Server] Sending SSE event: token { content: ' Improvement' }
[AnalyticalAgent] Token received: ":**"
[Server] Sending SSE event: token { content: ':**' }
[AnalyticalAgent] Token received: " Suggest"
[Server] Sending SSE event: token { content: ' Suggest' }
[AnalyticalAgent] Token received: " methods"
[Server] Sending SSE event: token { content: ' methods' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " enhance"
[Server] Sending SSE event: token { content: ' enhance' }
[AnalyticalAgent] Token received: " operational"
[Server] Sending SSE event: token { content: ' operational' }
[AnalyticalAgent] Token received: " efficiency"
[Server] Sending SSE event: token { content: ' efficiency' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " effectiveness"
[Server] Sending SSE event: token { content: ' effectiveness' }
[AnalyticalAgent] Token received: ".

"
[Server] Sending SSE event: token { content: '.\n\n' }
[AnalyticalAgent] Token received: "If"
[Server] Sending SSE event: token { content: 'If' }
[AnalyticalAgent] Token received: " you"
[Server] Sending SSE event: token { content: ' you' }
[AnalyticalAgent] Token received: " have"
[Server] Sending SSE event: token { content: ' have' }
[AnalyticalAgent] Token received: " a"
[Server] Sending SSE event: token { content: ' a' }
[AnalyticalAgent] Token received: " specific"
[Server] Sending SSE event: token { content: ' specific' }
[AnalyticalAgent] Token received: " problem"
[Server] Sending SSE event: token { content: ' problem' }
[AnalyticalAgent] Token received: " or"
[Server] Sending SSE event: token { content: ' or' }
[AnalyticalAgent] Token received: " question"
[Server] Sending SSE event: token { content: ' question' }
[AnalyticalAgent] Token received: " in"
[Server] Sending SSE event: token { content: ' in' }
[AnalyticalAgent] Token received: " mind"
[Server] Sending SSE event: token { content: ' mind' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " feel"
[Server] Sending SSE event: token { content: ' feel' }
[AnalyticalAgent] Token received: " free"
[Server] Sending SSE event: token { content: ' free' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " provide"
[Server] Sending SSE event: token { content: ' provide' }
[AnalyticalAgent] Token received: " more"
[Server] Sending SSE event: token { content: ' more' }
[AnalyticalAgent] Token received: " details"
[Server] Sending SSE event: token { content: ' details' }
[AnalyticalAgent] Token received: ","
[Server] Sending SSE event: token { content: ',' }
[AnalyticalAgent] Token received: " and"
[Server] Sending SSE event: token { content: ' and' }
[AnalyticalAgent] Token received: " I"
[Server] Sending SSE event: token { content: ' I' }
[AnalyticalAgent] Token received: " can"
[Server] Sending SSE event: token { content: ' can' }
[AnalyticalAgent] Token received: " tailor"
[Server] Sending SSE event: token { content: ' tailor' }
[AnalyticalAgent] Token received: " my"
[Server] Sending SSE event: token { content: ' my' }
[AnalyticalAgent] Token received: " assistance"
[Server] Sending SSE event: token { content: ' assistance' }
[AnalyticalAgent] Token received: " to"
[Server] Sending SSE event: token { content: ' to' }
[AnalyticalAgent] Token received: " your"
[Server] Sending SSE event: token { content: ' your' }
[AnalyticalAgent] Token received: " needs"
[Server] Sending SSE event: token { content: ' needs' }
[AnalyticalAgent] Token received: "."
[Server] Sending SSE event: token { content: '.' }
[AnalyticalAgent] Token received: ""
[Server] Sending SSE event: token { content: '' }
[AnalyticalAgent] Streaming completed (1523 chars)
[AnalyticalAgent] Final response length: 1523 chars
[PERF:Agent] AnalyticalAgent execution: 9639.10ms
[PERF:LLM] unknown - Total: 9639ms, TTFT: 3046ms, Stream: 6593ms, TPS: 42.3
[DEBUG] Memory status type: object
[DEBUG] Memory status: {
  "enabled": true,
  "memoryCount": 2,
  "status": "loaded",
  "retrievalTime": 2062
}
[Server] Performance data collected: {
  database: {
    totalTime: 4324.17,
    operations: { 'check-session': [Object], 'save-user-message': [Object] }
  },
  agent: { totalTime: 9639.29, selection: 0.15, execution: 9639.1 },
  llm: { totalTime: 9639.12, ttft: 3046.44, tokens: 279 }
}
[Server] Sending SSE event: done {
  agent: 'AnalyticalAgent',
  agentType: 'analytical',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  memoryStatus: {
    enabled: true,
    memoryCount: 2,
    status: 'loaded',
    retrievalTime: 2062
  },
  orchestration: {
    confidence: 1,
    streaming: true,
    forcedBySlashCommand: false,
    commandUsed: undefined
  },
  performance: {
    database: { totalTime: 4324.17, operations: [Object] },
    agent: { totalTime: 9639.29, selection: 0.15, execution: 9639.1 },
    llm: { totalTime: 9639.12, ttft: 3046.44, tokens: 279 }
  }
}
[Server] Recorded 2 database operations, total: 4324.13ms
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 45
[applyMiddleware] Checking body for PATCH - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Security middleware passed for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] PATCH /api/chats/:id/read endpoint hit
[Server] req.body: {}
[Server] Marking session as read: 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionIndex] Marked session 760fc7c7329d8c487f7f1911ee461b8d as read
[Server] Session marked as read successfully
[AnalyticalAgent] Mem0 context retrieval timed out after 10000ms (10s limit), using minimal context
[DEBUG] Entity type map: {"data_analysis":"field","data_cleaning_and_preparation":"task","descriptive_statistics":"analysis","inferential_statistics":"analysis","research_and_insights":"field","literature_review":"task","market_analysis":"task","policy_analysis":"task","problem_solving":"field","decision_analysis":"task","risk_assessment":"task","visualization":"field","data_visualization":"task","recommendations":"field","strategic_planning":"task","performance_improvement":"task"}
[DEBUG] Extracted entities: [{"source":"data_analysis","relationship":"includes","destination":"data_cleaning_and_preparation"},{"source":"data_analysis","relationship":"includes","destination":"descriptive_statistics"},{"source":"data_analysis","relationship":"includes","destination":"inferential_statistics"},{"source":"research_and_insights","relationship":"includes","destination":"literature_review"},{"source":"research_and_insights","relationship":"includes","destination":"market_analysis"},{"source":"research_and_insights","relationship":"includes","destination":"policy_analysis"},{"source":"problem_solving","relationship":"includes","destination":"decision_analysis"},{"source":"problem_solving","relationship":"includes","destination":"risk_assessment"},{"source":"visualization","relationship":"includes","destination":"data_visualization"},{"source":"recommendations","relationship":"includes","destination":"strategic_planning"},{"source":"recommendations","relationship":"includes","destination":"performance_improvement"}]
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/qdrant/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3225s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/qdrant/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3225s'
}
[CSRF-Header] Calling next() for GET /api/memory/qdrant/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/qdrant/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3225s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3225s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3223s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3222s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[DEBUG] Deleted relationships: [{"source":"data_analysis","relationship":"includes","destination":"data_cleaning_and_preparation"},{"source":"data_analysis","relationship":"includes","destination":"decision_analysis"},{"source":"data_analysis","relationship":"includes","destination":"risk_assessment"},{"source":"data_analysis","relationship":"includes","destination":"policy_analysis"},{"source":"data_analysis","relationship":"includes","destination":"market_analysis"}]
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[PostgresSessionIndex] Updated session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved assistant message to session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3170s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3165s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3164s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3160s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/config/security
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3159s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3150s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3146s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3146s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3146s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3146s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3144s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3143s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3141s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3141s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3141s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3141s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3138s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3137s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3136s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3127s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3123s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3123s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3123s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3123s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3122s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3120s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3107s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3098s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3092s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3085s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3082s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3082s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3082s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3082s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3081s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3080s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3080s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3080s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3080s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3063s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3062s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3062s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3062s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3062s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3059s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3057s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3057s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3057s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3057s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3055s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3052s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3052s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3052s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3052s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3045s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3018s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3012s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '3005s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/slash-commands
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2971s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2959s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2956s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2946s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2945s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2932s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2926s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2926s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2926s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2926s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2923s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2918s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2910s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2906s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2877s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2868s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2862s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2854s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2853s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2844s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2843s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2839s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2830s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2777s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2772s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2767s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2763s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2758s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=4'
  }
}
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2750s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2746s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2744s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2744s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2744s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2744s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2735s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2727s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2727s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2727s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2727s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2714s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2704s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2704s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2704s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2704s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:140.0) Gecko/20100101 Firefox/140.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate, br, zstd',
    referer: 'http://localhost:5173/',
    'content-type': 'application/json',
    connection: 'close',
    cookie: 'csrf-token=35df05ba8b635642ef729f6b3daf000e8da648997eb31560f109eb03703a3e75; __clerk_db_jwt=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __clerk_db_jwt_V2yMOE4L=dvb_2xmQKiP9oYwSBQDLMbuk5qM6gg4; __refresh_V2yMOE4L=0FJugPnAVOoi9OcIw0OI; __stripe_mid=daa7a403-a976-41a6-bd5e-a74a3c2e7350d26f1a; __client_uat_V2yMOE4L=1748540712; __client_uat=1748540712; ajs_anonymous_id=16c3dabe-0d11-4c8c-9a7e-bb6eb5c04109; sb-mndbkvmozigubebfjazg-auth-token=base64-eyJhY2Nlc3NfdG9rZW4iOiJleUpoYkdjaU9pSklVekkxTmlJc0ltdHBaQ0k2SWxsVFlYRkpjVEpLV2sxb1lucGtTak1pTENKMGVYQWlPaUpLVjFRaWZRLmV5SnBjM01pT2lKb2RIUndjem92TDIxdVpHSnJkbTF2ZW1sbmRXSmxZbVpxWVhwbkxuTjFjR0ZpWVhObExtTnZMMkYxZEdndmRqRWlMQ0p6ZFdJaU9pSmlPR1UwTUdGaFlTMDFORGhqTFRReU1XVXRPVEJoWkMwMVlUSTNPVFZoTmpRd05qTWlMQ0poZFdRaU9pSmhkWFJvWlc1MGFXTmhkR1ZrSWl3aVpYaHdJam94TnpRNU56a3dOak15TENKcFlYUWlPakUzTkRrM09EY3dNeklzSW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSndhRzl1WlNJNklpSXNJbUZ3Y0Y5dFpYUmhaR0YwWVNJNmV5SndjbTkyYVdSbGNpSTZJbVZ0WVdsc0lpd2ljSEp2ZG1sa1pYSnpJanBiSW1WdFlXbHNJbDE5TENKMWMyVnlYMjFsZEdGa1lYUmhJanA3SW1WdFlXbHNJam9pYzJWaGJrQmpjbTl6YzJkbGJpMWhhUzVqYjIwaUxDSmxiV0ZwYkY5MlpYSnBabWxsWkNJNmRISjFaU3dpY0dodmJtVmZkbVZ5YVdacFpXUWlPbVpoYkhObExDSnpkV0lpT2lKaU9HVTBNR0ZoWVMwMU5EaGpMVFF5TVdVdE9UQmhaQzAxWVRJM09UVmhOalF3TmpNaWZTd2ljbTlzWlNJNkltRjFkR2hsYm5ScFkyRjBaV1FpTENKaFlXd2lPaUpoWVd3eElpd2lZVzF5SWpwYmV5SnRaWFJvYjJRaU9pSnRZV2RwWTJ4cGJtc2lMQ0owYVcxbGMzUmhiWEFpT2pFM05EazNNRFU1TkROOVhTd2ljMlZ6YzJsdmJsOXBaQ0k2SW1VNU9ERXpZemM1TFRoa05tSXRORGRqWkMxaE1UQXhMVEJqWW1JMk5UUTVNREZsTUNJc0ltbHpYMkZ1YjI1NWJXOTFjeUk2Wm1Gc2MyVjkuUzE3dVZUYlAyeVBDOFl2STdoODNjMWpwaU9RcTRLUnpkU3lsNF9UTGVLcyIsInRva2VuX3R5cGUiOiJiZWFyZXIiLCJleHBpcmVzX2luIjozNjAwLCJleHBpcmVzX2F0IjoxNzQ5NzkwNjMyLCJyZWZyZXNoX3Rva2VuIjoiZTZ2Y2M0M2g1YmN1IiwidXNlciI6eyJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsImF1ZCI6ImF1dGhlbnRpY2F0ZWQiLCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF9jb25maXJtZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjU3LjIzMzk2OVoiLCJwaG9uZSI6IiIsImNvbmZpcm1hdGlvbl9zZW50X2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MTA2MzhaIiwiY29uZmlybWVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTo1Ny4yMzM5NjlaIiwicmVjb3Zlcnlfc2VudF9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6MjkuNDk5MDAzWiIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MjU6NDMuNDE4NDI3WiIsImFwcF9tZXRhZGF0YSI6eyJwcm92aWRlciI6ImVtYWlsIiwicHJvdmlkZXJzIjpbImVtYWlsIl19LCJ1c2VyX21ldGFkYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwiaWRlbnRpdGllcyI6W3siaWRlbnRpdHlfaWQiOiIyOGFhNTRiNy0zMzg1LTRmMmQtODk0NS1hNTgzOWI0M2EwMzciLCJpZCI6ImI4ZTQwYWFhLTU0OGMtNDIxZS05MGFkLTVhMjc5NWE2NDA2MyIsInVzZXJfaWQiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMiLCJpZGVudGl0eV9kYXRhIjp7ImVtYWlsIjoic2VhbkBjcm9zc2dlbi1haS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwicGhvbmVfdmVyaWZpZWQiOmZhbHNlLCJzdWIiOiJiOGU0MGFhYS01NDhjLTQyMWUtOTBhZC01YTI3OTVhNjQwNjMifSwicHJvdmlkZXIiOiJlbWFpbCIsImxhc3Rfc2lnbl9pbl9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNzAzOTIxWiIsImNyZWF0ZWRfYXQiOiIyMDI1LTA2LTEyVDA1OjE5OjMzLjcwMzk3NloiLCJ1cGRhdGVkX2F0IjoiMjAyNS0wNi0xMlQwNToxOTozMy43MDM5NzZaIiwiZW1haWwiOiJzZWFuQGNyb3NzZ2VuLWFpLmNvbSJ9XSwiY3JlYXRlZF9hdCI6IjIwMjUtMDYtMTJUMDU6MTk6MzMuNjk0NDg4WiIsInVwZGF0ZWRfYXQiOiIyMDI1LTA2LTEzVDAzOjU3OjEyLjQ3MTM4MVoiLCJpc19hbm9ueW1vdXMiOmZhbHNlfX0; __next_hmr_refresh_hash__=4; clerk_active_context=sess_2xmQLQ1hrLhu3kWzzSCqkLJ55He:; _streamlit_xsrf=2|76550659|b063f4ad24cd7e161e301a5cd5841df5|1749348860',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'same-origin',
    priority: 'u=0'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/neo4j/2
[Server] Security middleware passed for GET /api/memory/neo4j/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2694s'
}
[CSRF-Header] Calling next() for GET /api/memory/neo4j/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/neo4j/2
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/slash-commands
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/slash-commands
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/slash-commands
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/slash-commands
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/slash-commands
[SlashCommandService] Built maps: 6 commands, 24 aliases
[SlashCommandService] Loaded 6 slash commands
[SlashCommands] Served 6 commands to client
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Database Pool] New client connected
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[PostgresSessionStorage] Read 20 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2660s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2637s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[applyMiddleware] Checking body for POST - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for POST - req.body: {
  message: '/crm who is the latest lead in teh sysetm?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  slashCommand: { command: 'crm', agentType: 'CRMAgent' }
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2637s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Server] Applying security middleware for POST /api/chat/stream
[applyMiddleware] Checking body for POST - req.body: {
  message: '/crm who is the latest lead in teh sysetm?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  slashCommand: { command: 'crm', agentType: 'CRMAgent' }
}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Security middleware passed for POST /api/chat/stream
[Server] About to apply CSRF header middleware...
[applyMiddleware] Checking body for POST - req.body: {
  message: '/crm who is the latest lead in teh sysetm?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  slashCommand: { command: 'crm', agentType: 'CRMAgent' }
}
[applyMiddleware] Body already parsed, skipping parseBody
[CSRF-Header] Bypassing CSRF validation in development mode
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for POST /api/chat/stream
[Server] SSE streaming endpoint hit
[Server] Processing SSE request
[Server] req.body: {
  message: '/crm who is the latest lead in teh sysetm?',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  activeSessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  slashCommand: { command: 'crm', agentType: 'CRMAgent' }
}
[Server] Performance monitoring enabled for SSE request
[Server] Streaming request for session: 760fc7c7329d8c487f7f1911ee461b8d, message: "/crm who is the latest lead in teh sysetm?"
[Server] Sending SSE event: connected { sessionId: '760fc7c7329d8c487f7f1911ee461b8d' }
[Server] SSE: Frontend slash command metadata received: { command: 'crm', agentType: 'CRMAgent' }
[Server] SSE: Using frontend slash command: /crm → CRMAgent
[ORCHESTRATOR] Processing with streaming: "/crm who is the latest lead in teh sysetm?"
[ORCHESTRATOR] SSE: Forced routing to CRMAgent via slash command /crm
[ORCHESTRATOR] SSE: Found target agent: CRMAgent for forced routing
[Server] Sending SSE event: start { agent: 'CRMAgent', sessionId: '760fc7c7329d8c487f7f1911ee461b8d' }
[CRMAgent] Initializing...
[LLMHelper] Creating ChatLLM with provider: openai, model: gpt-4o, streaming: false
[CRMAgent] LLM initialized for AI-powered query understanding
[InsightlyApiTool] Initializing with config: {
  apiUrl: 'https://api.na1.insightly.com/v3.1',
  apiKey: '25af...dfc7',
  rateLimit: { maxRequests: 10, windowMs: 1000 },
  timeout: 10000,
  retryAttempts: 3,
  maxPageSize: 50
}
[API Compliance] Authentication - COMPLIANT ✓
[InsightlyApiTool] Initialization complete
[InsightlyApiTool] Initializing with config: {
  apiUrl: 'https://api.na1.insightly.com/v3.1',
  apiKey: '25af...dfc7',
  rateLimit: { maxRequests: 10, windowMs: 1000 },
  timeout: 10000,
  retryAttempts: 3,
  maxPageSize: 50
}
[API Compliance] Authentication - COMPLIANT ✓
[InsightlyApiTool] Initialization complete
[ContactManagerTool] Initialized successfully
[InsightlyApiTool] Initializing with config: {
  apiUrl: 'https://api.na1.insightly.com/v3.1',
  apiKey: '25af...dfc7',
  rateLimit: { maxRequests: 10, windowMs: 1000 },
  timeout: 10000,
  retryAttempts: 3,
  maxPageSize: 50
}
[API Compliance] Authentication - COMPLIANT ✓
[InsightlyApiTool] Initialization complete
[OpportunityTool] Initialized successfully
[CRMAgent] Initialization complete
[CRMAgent] Using Mem0 for context retrieval
[CRMAgent] Starting Mem0 context retrieval...
[Server] Starting deferred session operations for: 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2637s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Session check took: 5.23ms
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 46
[DEBUG] Entity type map: {"latest_lead":"lead","system":"system"}
[DEBUG] Entity type map: {"latest_lead":"lead","crm":"system"}
[INFO] Returned 2 search results
[Mem0Service] Search for "/crm who is the latest lead in teh sysetm?" returned 2 results
[Mem0Service] Built context with 2 relevant memories
[CRMAgent] Context retrieval completed in 3577ms
[CRMAgent] Memory status set: {
  enabled: true,
  memoryCount: 2,
  status: 'loaded',
  retrievalTime: 3577
}
[CRMAgent] Mem0 returned 4 context messages
[PERF:LLM] Slow TTFT for unknown: 3578.61ms
[Server] Sending SSE event: token { content: '[CRM Agent] Analyzing query...\n' }
[CRMAgent] Intake node processing...
[CRMAgent] LLM Understanding node processing...
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2634s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2634s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[DEBUG] Extracted entities: [{"source":"crm","relationship":"queries","destination":"latest_lead"}]
[CRMWorkflowHelper] LLM Query Analysis: {
  userIntent: 'find latest lead',
  extractedInfo: { names: [], emails: [], companies: [], identifiers: [] },
  searchStrategy: {
    primaryApproach: 'search by creation date',
    fallbackApproaches: [ 'search by recent activity' ],
    needsDetailedView: false
  },
  confidence: 0.9
}
[CRMAgent] LLM Understanding result: {
  userIntent: 'find latest lead',
  extractedInfo: { names: [], emails: [], companies: [], identifiers: [] },
  searchStrategy: {
    primaryApproach: 'search by creation date',
    fallbackApproaches: [ 'search by recent activity' ],
    needsDetailedView: false
  },
  confidence: 0.9
}
[CRMAgent] Tool Orchestration node processing...
[DEBUG] Deleted relationships: [{"source":"2","relationship":"inquire_about","destination":"newest_lead"},{"source":"specific","relationship":"suggests_being_more","destination":"crm"}]
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved user message to session 760fc7c7329d8c487f7f1911ee461b8d
[PERF:DB] Slow query 'save-user-message': 7440.90ms
[Server] Message save took: 7440.92ms
[Server] Total session operations took: 7446.18ms
[CRMWorkflowHelper] Tool Orchestration Plan: {
  toolSequence: [
    {
      toolName: 'searchContacts',
      parameters: [Object],
      reason: 'Primary search by creation date to find the latest lead'
    },
    {
      toolName: 'searchContacts',
      parameters: [Object],
      reason: 'Fallback search by recent activity if no result from creation date'
    }
  ],
  expectedOutcome: 'Identify the latest lead based on creation date or recent activity'
}
[CRMAgent] Tool orchestration plan: {
  toolSequence: [
    {
      toolName: 'searchContacts',
      parameters: [Object],
      reason: 'Primary search by creation date to find the latest lead'
    },
    {
      toolName: 'searchContacts',
      parameters: [Object],
      reason: 'Fallback search by recent activity if no result from creation date'
    }
  ],
  expectedOutcome: 'Identify the latest lead based on creation date or recent activity'
}
[CRMAgent] Executing searchContacts: { field_name: 'CREATION_DATE', field_value: 'latest' }
[ContactManagerTool] Executing search with query: latest
[Server] Sending SSE event: tool_start {
  toolId: 'tool-1752013148962-y90dv8wzt',
  toolName: 'contact-manager',
  parameters: {
    action: 'search',
    query: 'latest',
    options: { limit: 20, sortBy: undefined }
  },
  agentName: 'CRMAgent'
}
[Server] Sending SSE event: tool_progress {
  toolId: 'tool-1752013148962-y90dv8wzt',
  progress: 'Searching for "latest"...',
  metadata: {
    toolId: 'tool-1752013148962-y90dv8wzt',
    action: 'search',
    query: 'latest'
  }
}
[API Compliance] searchContacts: /Contacts/Search - COMPLIANT ✓
[InsightlyApiTool] Searching contacts with params: {
  endpoint: '/Contacts/Search',
  limit: 20,
  searchField: 'FIRST_NAME',
  searchValue: 'latest',
  fullUrl: '/Contacts/Search?field_name=FIRST_NAME&field_value=latest&top=20'
}
[Server] Sending SSE event: tool_result {
  toolId: 'tool-1752013148962-y90dv8wzt',
  result: { contacts: [], count: 0, hasMore: false }
}
[CRMAgent] Executing searchContacts: { field_name: 'RECENT_ACTIVITY', field_value: 'latest' }
[ContactManagerTool] Executing search with query: latest
[Server] Sending SSE event: tool_start {
  toolId: 'tool-1752013149365-25nejl66x',
  toolName: 'contact-manager',
  parameters: {
    action: 'search',
    query: 'latest',
    options: { limit: 20, sortBy: undefined }
  },
  agentName: 'CRMAgent'
}
[Server] Sending SSE event: tool_progress {
  toolId: 'tool-1752013149365-25nejl66x',
  progress: 'Searching for "latest"...',
  metadata: {
    toolId: 'tool-1752013149365-25nejl66x',
    action: 'search',
    query: 'latest'
  }
}
[API Compliance] searchContacts: /Contacts/Search - COMPLIANT ✓
[InsightlyApiTool] Searching contacts with params: {
  endpoint: '/Contacts/Search',
  limit: 20,
  searchField: 'FIRST_NAME',
  searchValue: 'latest',
  fullUrl: '/Contacts/Search?field_name=FIRST_NAME&field_value=latest&top=20'
}
[Server] Sending SSE event: tool_result {
  toolId: 'tool-1752013149365-25nejl66x',
  result: { contacts: [], count: 0, hasMore: false }
}
[CRMAgent] Result Processing node processing...
[CRMAgent] Mem0 context retrieval timed out after 10001ms (10s limit), using minimal context
[Server] Sending SSE event: token {
  content: 'Hi there! 😊\n' +
    '\n' +
    "It looks like you were trying to find the latest lead in the system, but it seems we couldn't find any leads at the moment. Here are a few things you might want to check or try:\n" +
    '\n' +
    '1. **Double-check your query**: Make sure there are no typos. For example, "teh sysetm" should be "the system."\n' +
    '\n' +
    "2. **Expand your search criteria**: If you're looking for leads added recently, consider broadening the date range or checking for recent activities.\n" +
    '\n' +
    '3. **Check your filters**: Ensure there are no active filters that might be limiting your search results.\n' +
    '\n' +
    "4. **Reach out for help**: If you're still having trouble, feel free to contact our support team for assistance.\n" +
    '\n' +
    "If there's anything else I can help you with, just let me know! 😊"
}
[PERF:Agent] undefined execution: 13157.75ms
[PERF:LLM] unknown - Total: 13158ms, TTFT: 3579ms, Stream: 9579ms, TPS: 0.2
[DEBUG] Memory status type: object
[DEBUG] Memory status: {
  "enabled": true,
  "memoryCount": 2,
  "status": "loaded",
  "retrievalTime": 3577
}
[Server] Performance data collected: {
  database: {
    totalTime: 7446.16,
    operations: { 'check-session': [Object], 'save-user-message': [Object] }
  },
  agent: { totalTime: 13157.75, selection: 0, execution: 13157.75 },
  llm: { totalTime: 13157.83, ttft: 3578.61, tokens: 2 }
}
[Server] Sending SSE event: done {
  agent: 'CRMAgent',
  agentType: 'crm',
  sessionId: '760fc7c7329d8c487f7f1911ee461b8d',
  memoryStatus: {
    enabled: true,
    memoryCount: 2,
    status: 'loaded',
    retrievalTime: 3577
  },
  orchestration: {
    confidence: 1,
    streaming: true,
    forcedBySlashCommand: true,
    commandUsed: 'crm'
  },
  performance: {
    database: { totalTime: 7446.16, operations: [Object] },
    agent: { totalTime: 13157.75, selection: 0, execution: 13157.75 },
    llm: { totalTime: 13157.83, ttft: 3578.61, tokens: 2 }
  }
}
[Server] Recorded 2 database operations, total: 7446.12ms
[applyMiddleware] Checking body for PATCH - req.body: null
[applyMiddleware] Body not parsed, calling parseBody...
[parseBody] Body parsed successfully
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[PostgresSessionStorage] Appended message to session 760fc7c7329d8c487f7f1911ee461b8d, id: 47
[Server] Applying security middleware for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[applyMiddleware] Checking body for PATCH - req.body: {}
[applyMiddleware] Body already parsed, skipping parseBody
[Server] Security middleware passed for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for PATCH /api/chats/760fc7c7329d8c487f7f1911ee461b8d/read
[Server] PATCH /api/chats/:id/read endpoint hit
[Server] req.body: {}
[Server] Marking session as read: 760fc7c7329d8c487f7f1911ee461b8d
[PostgresSessionIndex] Marked session 760fc7c7329d8c487f7f1911ee461b8d as read
[Server] Session marked as read successfully
[DEBUG] Entity type map: {"crm_agent":"role","lead":"object","system":"system","support_team":"group"}
[DEBUG] Extracted entities: [{"source":"crm_agent","relationship":"analyzes","destination":"query"},{"source":"lead","relationship":"is_in","destination":"system"},{"source":"support_team","relationship":"provides","destination":"assistance"},{"source":"crm_agent","relationship":"offers","destination":"help"}]
[DEBUG] Deleted relationships: []
[Mem0Service] Added 1 messages to memory for session 760fc7c7329d8c487f7f1911ee461b8d, user 2
[PostgresSessionIndex] Message count auto-incremented by trigger for session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[PostgresSessionIndex] Updated session 760fc7c7329d8c487f7f1911ee461b8d
[StorageManager] Saved assistant message to session 760fc7c7329d8c487f7f1911ee461b8d
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Database Pool] New client connected
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2593s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2592s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2591s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2588s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2587s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2580s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2579s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/security
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2560s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Database Pool] New client connected
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2559s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2555s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2554s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2553s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2546s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2545s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2544s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2543s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Applying security middleware for GET /api/memory/users
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/config/security
[Server] Applying security middleware for GET /api/memory/users
[Database Pool] New client connected
[Server] Applying security middleware for GET /api/memory/postgres/2
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/memory/users
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/memory/users
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/users
[Server] Security middleware passed for GET /api/memory/postgres/2
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/memory/postgres/2
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/memory/postgres/2
[Memory API] PostgreSQL visualization request: {
  userId: '2',
  reqUser: {
    id: 2,
    email: 'dev@example.com',
    name: 'Development User',
    groups: [ 'admin' ],
    azureId: 'mock-azure-id'
  },
  isAuthenticated: true,
  headers: {
    host: 'localhost:3000',
    connection: 'close',
    'sec-ch-ua-platform': '"macOS"',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36',
    'sec-ch-ua': '"Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"',
    'content-type': 'application/json',
    'sec-ch-ua-mobile': '?0',
    accept: '*/*',
    'sec-fetch-site': 'same-origin',
    'sec-fetch-mode': 'cors',
    'sec-fetch-dest': 'empty',
    referer: 'http://localhost:5173/',
    'accept-encoding': 'gzip, deflate, br, zstd',
    'accept-language': 'en-US,en;q=0.9'
  }
}
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2536s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2535s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/auth/user
[Server] Security middleware passed for GET /api/auth/user
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/auth/user
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/auth/user
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/chats
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Security middleware passed for GET /api/chats
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats
[Server] Listing chats for user: 2
[Server] Applying security middleware for GET /api/config/security
[Server] Security middleware passed for GET /api/config/security
[Server] About to apply CSRF header middleware...
[Server] Skipping CSRF for auth/read/config endpoint
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/security
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/security
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/settings
[Server] Applying security middleware for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Security middleware passed for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Messages endpoint hit: /api/chats/760fc7c7329d8c487f7f1911ee461b8d/messages
[Server] Loading messages for session: 760fc7c7329d8c487f7f1911ee461b8d, offset: 0, limit: 50
[PostgresSessionStorage] Read 22 messages from session 760fc7c7329d8c487f7f1911ee461b8d
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Applying security middleware for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
[Server] Security middleware passed for GET /api/config/markdown
[Server] About to apply CSRF header middleware...
[CSRF-Header] Using existing token: {
  sessionId: '::1',
  token: 'e454e5af04d5862d9301...',
  expiresIn: '2534s'
}
[CSRF-Header] Calling next() for GET /api/config/markdown
[Server] CSRF header middleware completed
[Server] Passed all middleware, continuing to routing for GET /api/config/markdown
